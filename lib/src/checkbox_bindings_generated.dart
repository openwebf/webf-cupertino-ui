// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by webf codegen generate --flutter-package-src=./webf/lib/src/cupertino --framework=<framework> <distPath>
import 'package:webf/webf.dart';
abstract class FlutterCupertinoCheckboxBindings extends WidgetElement {
  FlutterCupertinoCheckboxBindings(super.context);
  String? get val;
  set val(value);
  bool? get disabled;
  set disabled(value);
  String? get activeColor;
  set activeColor(value);
  String? get checkColor;
  set checkColor(value);
  String? get focusColor;
  set focusColor(value);
  String? get fillColorSelected;
  set fillColorSelected(value);
  String? get fillColorDisabled;
  set fillColorDisabled(value);
  @override
  void initializeAttributes(Map<String, ElementAttributeProperty> attributes) {
    super.initializeAttributes(attributes);
    attributes['val'] = ElementAttributeProperty(
      getter: () => val.toString(),
      setter: (value) => val = value
    );
    attributes['disabled'] = ElementAttributeProperty(
      getter: () => disabled.toString(),
      setter: (value) => disabled = value
    );
    attributes['active-color'] = ElementAttributeProperty(
      getter: () => activeColor.toString(),
      setter: (value) => activeColor = value
    );
    attributes['check-color'] = ElementAttributeProperty(
      getter: () => checkColor.toString(),
      setter: (value) => checkColor = value
    );
    attributes['focus-color'] = ElementAttributeProperty(
      getter: () => focusColor.toString(),
      setter: (value) => focusColor = value
    );
    attributes['fill-color-selected'] = ElementAttributeProperty(
      getter: () => fillColorSelected.toString(),
      setter: (value) => fillColorSelected = value
    );
    attributes['fill-color-disabled'] = ElementAttributeProperty(
      getter: () => fillColorDisabled.toString(),
      setter: (value) => fillColorDisabled = value
    );
  }
  static StaticDefinedBindingPropertyMap flutterCupertinoCheckboxProperties = {
    'val': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoCheckboxBindings>(element).val,
      setter: (element, value) =>
      castToType<FlutterCupertinoCheckboxBindings>(element).val = value,
    ),
    'disabled': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoCheckboxBindings>(element).disabled,
      setter: (element, value) =>
      castToType<FlutterCupertinoCheckboxBindings>(element).disabled = value,
    ),
    'activeColor': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoCheckboxBindings>(element).activeColor,
      setter: (element, value) =>
      castToType<FlutterCupertinoCheckboxBindings>(element).activeColor = value,
    ),
    'checkColor': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoCheckboxBindings>(element).checkColor,
      setter: (element, value) =>
      castToType<FlutterCupertinoCheckboxBindings>(element).checkColor = value,
    ),
    'focusColor': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoCheckboxBindings>(element).focusColor,
      setter: (element, value) =>
      castToType<FlutterCupertinoCheckboxBindings>(element).focusColor = value,
    ),
    'fillColorSelected': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoCheckboxBindings>(element).fillColorSelected,
      setter: (element, value) =>
      castToType<FlutterCupertinoCheckboxBindings>(element).fillColorSelected = value,
    ),
    'fillColorDisabled': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoCheckboxBindings>(element).fillColorDisabled,
      setter: (element, value) =>
      castToType<FlutterCupertinoCheckboxBindings>(element).fillColorDisabled = value,
    ),
  };
  @override
  List<StaticDefinedBindingPropertyMap> get properties => [
    ...super.properties,
    flutterCupertinoCheckboxProperties,
  ];
}