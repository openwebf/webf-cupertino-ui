// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by webf codegen --flutter-package-src=/Users/andycall/workspace/webf-enterprise-2/webf_cupertino_ui --framework=react <distPath>
// ignore_for_file: avoid_unused_constructor_parameters
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: implementation_imports
// ignore_for_file: library_private_types_in_public_api
// ignore_for_file: prefer_void_to_null
import 'package:webf/webf.dart';
abstract class FlutterCupertinoTextareaBindings extends WidgetElement {
  FlutterCupertinoTextareaBindings(super.context);
  String? get val;
  set val(value);
  String? get placeholder;
  set placeholder(value);
  bool get disabled;
  set disabled(value);
  bool get readonly;
  set readonly(value);
  int? get maxLength;
  set maxLength(value);
  int? get rows;
  set rows(value);
  bool get showCount;
  set showCount(value);
  bool get autoSize;
  set autoSize(value);
  bool get transparent;
  set transparent(value);
  @override
  void initializeAttributes(Map<String, ElementAttributeProperty> attributes) {
    super.initializeAttributes(attributes);
    attributes['val'] = ElementAttributeProperty(
      getter: () => val?.toString(),
      setter: (value) => val = value,
      deleter: () => val = null
    );
    attributes['placeholder'] = ElementAttributeProperty(
      getter: () => placeholder?.toString(),
      setter: (value) => placeholder = value,
      deleter: () => placeholder = null
    );
    attributes['disabled'] = ElementAttributeProperty(
      getter: () => disabled.toString(),
      setter: (value) => disabled = value == 'true' || value == '',
      deleter: () => disabled = false
    );
    attributes['readonly'] = ElementAttributeProperty(
      getter: () => readonly.toString(),
      setter: (value) => readonly = value == 'true' || value == '',
      deleter: () => readonly = false
    );
    attributes['max-length'] = ElementAttributeProperty(
      getter: () => maxLength?.toString(),
      setter: (value) => maxLength = int.tryParse(value) ?? 0,
      deleter: () => maxLength = 0
    );
    attributes['rows'] = ElementAttributeProperty(
      getter: () => rows?.toString(),
      setter: (value) => rows = int.tryParse(value) ?? 0,
      deleter: () => rows = 0
    );
    attributes['show-count'] = ElementAttributeProperty(
      getter: () => showCount.toString(),
      setter: (value) => showCount = value == 'true' || value == '',
      deleter: () => showCount = false
    );
    attributes['auto-size'] = ElementAttributeProperty(
      getter: () => autoSize.toString(),
      setter: (value) => autoSize = value == 'true' || value == '',
      deleter: () => autoSize = false
    );
    attributes['transparent'] = ElementAttributeProperty(
      getter: () => transparent.toString(),
      setter: (value) => transparent = value == 'true' || value == '',
      deleter: () => transparent = false
    );
  }
  static StaticDefinedBindingPropertyMap flutterCupertinoTextareaProperties = {
    'val': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoTextareaBindings>(element).val,
      setter: (element, value) =>
      castToType<FlutterCupertinoTextareaBindings>(element).val = value,
    ),
    'placeholder': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoTextareaBindings>(element).placeholder,
      setter: (element, value) =>
      castToType<FlutterCupertinoTextareaBindings>(element).placeholder = value,
    ),
    'disabled': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoTextareaBindings>(element).disabled,
      setter: (element, value) =>
      castToType<FlutterCupertinoTextareaBindings>(element).disabled = value,
    ),
    'readonly': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoTextareaBindings>(element).readonly,
      setter: (element, value) =>
      castToType<FlutterCupertinoTextareaBindings>(element).readonly = value,
    ),
    'maxLength': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoTextareaBindings>(element).maxLength,
      setter: (element, value) =>
      castToType<FlutterCupertinoTextareaBindings>(element).maxLength = value,
    ),
    'rows': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoTextareaBindings>(element).rows,
      setter: (element, value) =>
      castToType<FlutterCupertinoTextareaBindings>(element).rows = value,
    ),
    'showCount': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoTextareaBindings>(element).showCount,
      setter: (element, value) =>
      castToType<FlutterCupertinoTextareaBindings>(element).showCount = value,
    ),
    'autoSize': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoTextareaBindings>(element).autoSize,
      setter: (element, value) =>
      castToType<FlutterCupertinoTextareaBindings>(element).autoSize = value,
    ),
    'transparent': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoTextareaBindings>(element).transparent,
      setter: (element, value) =>
      castToType<FlutterCupertinoTextareaBindings>(element).transparent = value,
    ),
  };
  @override
  List<StaticDefinedBindingPropertyMap> get properties => [
    ...super.properties,
    flutterCupertinoTextareaProperties,
  ];
}