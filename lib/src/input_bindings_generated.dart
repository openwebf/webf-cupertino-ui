// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by webf codegen --flutter-package-src=/Users/andycall/workspace/webf-enterprise-2/webf_cupertino_ui --framework=react <distPath>
// ignore_for_file: avoid_unused_constructor_parameters
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: implementation_imports
// ignore_for_file: library_private_types_in_public_api
// ignore_for_file: prefer_void_to_null
import 'package:webf/webf.dart';
abstract class FlutterCupertinoInputBindings extends WidgetElement {
  FlutterCupertinoInputBindings(super.context);
  String? get val;
  set val(value);
  String? get placeholder;
  set placeholder(value);
  String? get type;
  set type(value);
  bool get disabled;
  set disabled(value);
  bool get autofocus;
  set autofocus(value);
  bool get clearable;
  set clearable(value);
  int? get maxlength;
  set maxlength(value);
  bool get readonly;
  set readonly(value);
  @override
  void initializeAttributes(Map<String, ElementAttributeProperty> attributes) {
    super.initializeAttributes(attributes);
    attributes['val'] = ElementAttributeProperty(
      getter: () => val?.toString(),
      setter: (value) => val = value,
      deleter: () => val = null
    );
    attributes['placeholder'] = ElementAttributeProperty(
      getter: () => placeholder?.toString(),
      setter: (value) => placeholder = value,
      deleter: () => placeholder = null
    );
    attributes['type'] = ElementAttributeProperty(
      getter: () => type?.toString(),
      setter: (value) => type = value,
      deleter: () => type = null
    );
    attributes['disabled'] = ElementAttributeProperty(
      getter: () => disabled.toString(),
      setter: (value) => disabled = value == 'true' || value == '',
      deleter: () => disabled = false
    );
    attributes['autofocus'] = ElementAttributeProperty(
      getter: () => autofocus.toString(),
      setter: (value) => autofocus = value == 'true' || value == '',
      deleter: () => autofocus = false
    );
    attributes['clearable'] = ElementAttributeProperty(
      getter: () => clearable.toString(),
      setter: (value) => clearable = value == 'true' || value == '',
      deleter: () => clearable = false
    );
    attributes['maxlength'] = ElementAttributeProperty(
      getter: () => maxlength?.toString(),
      setter: (value) => maxlength = int.tryParse(value) ?? 0,
      deleter: () => maxlength = 0
    );
    attributes['readonly'] = ElementAttributeProperty(
      getter: () => readonly.toString(),
      setter: (value) => readonly = value == 'true' || value == '',
      deleter: () => readonly = false
    );
  }
  static StaticDefinedBindingPropertyMap flutterCupertinoInputProperties = {
    'val': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoInputBindings>(element).val,
      setter: (element, value) =>
      castToType<FlutterCupertinoInputBindings>(element).val = value,
    ),
    'placeholder': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoInputBindings>(element).placeholder,
      setter: (element, value) =>
      castToType<FlutterCupertinoInputBindings>(element).placeholder = value,
    ),
    'type': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoInputBindings>(element).type,
      setter: (element, value) =>
      castToType<FlutterCupertinoInputBindings>(element).type = value,
    ),
    'disabled': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoInputBindings>(element).disabled,
      setter: (element, value) =>
      castToType<FlutterCupertinoInputBindings>(element).disabled = value,
    ),
    'autofocus': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoInputBindings>(element).autofocus,
      setter: (element, value) =>
      castToType<FlutterCupertinoInputBindings>(element).autofocus = value,
    ),
    'clearable': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoInputBindings>(element).clearable,
      setter: (element, value) =>
      castToType<FlutterCupertinoInputBindings>(element).clearable = value,
    ),
    'maxlength': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoInputBindings>(element).maxlength,
      setter: (element, value) =>
      castToType<FlutterCupertinoInputBindings>(element).maxlength = value,
    ),
    'readonly': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoInputBindings>(element).readonly,
      setter: (element, value) =>
      castToType<FlutterCupertinoInputBindings>(element).readonly = value,
    ),
  };
  @override
  List<StaticDefinedBindingPropertyMap> get properties => [
    ...super.properties,
    flutterCupertinoInputProperties,
  ];
}