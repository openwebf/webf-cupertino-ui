// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by webf codegen generate --flutter-package-src=./webf/lib/src/cupertino --framework=<framework> <distPath>
import 'package:webf/webf.dart';
abstract class FlutterCupertinoSwitchBindings extends WidgetElement {
  FlutterCupertinoSwitchBindings(super.context);
  bool? get checked;
  set checked(value);
  bool? get disabled;
  set disabled(value);
  String? get activeColor;
  set activeColor(value);
  String? get inactiveColor;
  set inactiveColor(value);
  @override
  void initializeAttributes(Map<String, ElementAttributeProperty> attributes) {
    super.initializeAttributes(attributes);
    attributes['checked'] = ElementAttributeProperty(
      getter: () => checked.toString(),
      setter: (value) => checked = value
    );
    attributes['disabled'] = ElementAttributeProperty(
      getter: () => disabled.toString(),
      setter: (value) => disabled = value
    );
    attributes['active-color'] = ElementAttributeProperty(
      getter: () => activeColor.toString(),
      setter: (value) => activeColor = value
    );
    attributes['inactive-color'] = ElementAttributeProperty(
      getter: () => inactiveColor.toString(),
      setter: (value) => inactiveColor = value
    );
  }
  static StaticDefinedBindingPropertyMap flutterCupertinoSwitchProperties = {
    'checked': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoSwitchBindings>(element).checked,
      setter: (element, value) =>
      castToType<FlutterCupertinoSwitchBindings>(element).checked = value,
    ),
    'disabled': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoSwitchBindings>(element).disabled,
      setter: (element, value) =>
      castToType<FlutterCupertinoSwitchBindings>(element).disabled = value,
    ),
    'activeColor': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoSwitchBindings>(element).activeColor,
      setter: (element, value) =>
      castToType<FlutterCupertinoSwitchBindings>(element).activeColor = value,
    ),
    'inactiveColor': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoSwitchBindings>(element).inactiveColor,
      setter: (element, value) =>
      castToType<FlutterCupertinoSwitchBindings>(element).inactiveColor = value,
    ),
  };
  @override
  List<StaticDefinedBindingPropertyMap> get properties => [
    ...super.properties,
    flutterCupertinoSwitchProperties,
  ];
}