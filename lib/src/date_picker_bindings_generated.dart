// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by webf codegen generate --flutter-package-src=./webf/lib/src/cupertino --framework=<framework> <distPath>
import 'package:webf/webf.dart';
abstract class FlutterCupertinoDatePickerBindings extends WidgetElement {
  FlutterCupertinoDatePickerBindings(super.context);
  String? get mode;
  set mode(value);
  String? get minimumDate;
  set minimumDate(value);
  String? get maximumDate;
  set maximumDate(value);
  String? get minuteInterval;
  set minuteInterval(value);
  String? get value;
  set value(value);
  String? get minimumYear;
  set minimumYear(value);
  String? get maximumYear;
  set maximumYear(value);
  String? get showDayOfWeek;
  set showDayOfWeek(value);
  String? get dateOrder;
  set dateOrder(value);
  String? get height;
  set height(value);
  bool? get use24H;
  set use24H(value);
  @override
  void initializeAttributes(Map<String, ElementAttributeProperty> attributes) {
    super.initializeAttributes(attributes);
    attributes['mode'] = ElementAttributeProperty(
      getter: () => mode.toString(),
      setter: (value) => mode = value
    );
    attributes['minimum-date'] = ElementAttributeProperty(
      getter: () => minimumDate.toString(),
      setter: (value) => minimumDate = value
    );
    attributes['maximum-date'] = ElementAttributeProperty(
      getter: () => maximumDate.toString(),
      setter: (value) => maximumDate = value
    );
    attributes['minute-interval'] = ElementAttributeProperty(
      getter: () => minuteInterval.toString(),
      setter: (value) => minuteInterval = value
    );
    attributes['value'] = ElementAttributeProperty(
      getter: () => value.toString(),
      setter: (value) => value = value
    );
    attributes['minimum-year'] = ElementAttributeProperty(
      getter: () => minimumYear.toString(),
      setter: (value) => minimumYear = value
    );
    attributes['maximum-year'] = ElementAttributeProperty(
      getter: () => maximumYear.toString(),
      setter: (value) => maximumYear = value
    );
    attributes['show-day-of-week'] = ElementAttributeProperty(
      getter: () => showDayOfWeek.toString(),
      setter: (value) => showDayOfWeek = value
    );
    attributes['date-order'] = ElementAttributeProperty(
      getter: () => dateOrder.toString(),
      setter: (value) => dateOrder = value
    );
    attributes['height'] = ElementAttributeProperty(
      getter: () => height.toString(),
      setter: (value) => height = value
    );
    attributes['use-24-h'] = ElementAttributeProperty(
      getter: () => use24H.toString(),
      setter: (value) => use24H = value
    );
  }
  static StaticDefinedBindingPropertyMap flutterCupertinoDatePickerProperties = {
    'mode': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoDatePickerBindings>(element).mode,
      setter: (element, value) =>
      castToType<FlutterCupertinoDatePickerBindings>(element).mode = value,
    ),
    'minimumDate': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoDatePickerBindings>(element).minimumDate,
      setter: (element, value) =>
      castToType<FlutterCupertinoDatePickerBindings>(element).minimumDate = value,
    ),
    'maximumDate': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoDatePickerBindings>(element).maximumDate,
      setter: (element, value) =>
      castToType<FlutterCupertinoDatePickerBindings>(element).maximumDate = value,
    ),
    'minuteInterval': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoDatePickerBindings>(element).minuteInterval,
      setter: (element, value) =>
      castToType<FlutterCupertinoDatePickerBindings>(element).minuteInterval = value,
    ),
    'value': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoDatePickerBindings>(element).value,
      setter: (element, value) =>
      castToType<FlutterCupertinoDatePickerBindings>(element).value = value,
    ),
    'minimumYear': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoDatePickerBindings>(element).minimumYear,
      setter: (element, value) =>
      castToType<FlutterCupertinoDatePickerBindings>(element).minimumYear = value,
    ),
    'maximumYear': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoDatePickerBindings>(element).maximumYear,
      setter: (element, value) =>
      castToType<FlutterCupertinoDatePickerBindings>(element).maximumYear = value,
    ),
    'showDayOfWeek': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoDatePickerBindings>(element).showDayOfWeek,
      setter: (element, value) =>
      castToType<FlutterCupertinoDatePickerBindings>(element).showDayOfWeek = value,
    ),
    'dateOrder': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoDatePickerBindings>(element).dateOrder,
      setter: (element, value) =>
      castToType<FlutterCupertinoDatePickerBindings>(element).dateOrder = value,
    ),
    'height': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoDatePickerBindings>(element).height,
      setter: (element, value) =>
      castToType<FlutterCupertinoDatePickerBindings>(element).height = value,
    ),
    'use24H': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoDatePickerBindings>(element).use24H,
      setter: (element, value) =>
      castToType<FlutterCupertinoDatePickerBindings>(element).use24H = value,
    ),
  };
  @override
  List<StaticDefinedBindingPropertyMap> get properties => [
    ...super.properties,
    flutterCupertinoDatePickerProperties,
  ];
}