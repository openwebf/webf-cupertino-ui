// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by webf codegen --flutter-package-src=./webf_cupertino_ui/ --framework=react <distPath>
// ignore_for_file: avoid_unused_constructor_parameters
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: implementation_imports
// ignore_for_file: library_private_types_in_public_api
// ignore_for_file: prefer_void_to_null
import 'package:webf/webf.dart';
abstract class FlutterCupertinoTabBarBindings extends WidgetElement {
  FlutterCupertinoTabBarBindings(super.context);
  String? get currentIndex;
  set currentIndex(value);
  String? get backgroundColor;
  set backgroundColor(value);
  String? get activeColor;
  set activeColor(value);
  String? get inactiveColor;
  set inactiveColor(value);
  String? get iconSize;
  set iconSize(value);
  String? get height;
  set height(value);
  @override
  void initializeAttributes(Map<String, ElementAttributeProperty> attributes) {
    super.initializeAttributes(attributes);
    attributes['current-index'] = ElementAttributeProperty(
      getter: () => currentIndex?.toString(),
      setter: (value) => currentIndex = value,
      deleter: () => currentIndex = null
    );
    attributes['background-color'] = ElementAttributeProperty(
      getter: () => backgroundColor?.toString(),
      setter: (value) => backgroundColor = value,
      deleter: () => backgroundColor = null
    );
    attributes['active-color'] = ElementAttributeProperty(
      getter: () => activeColor?.toString(),
      setter: (value) => activeColor = value,
      deleter: () => activeColor = null
    );
    attributes['inactive-color'] = ElementAttributeProperty(
      getter: () => inactiveColor?.toString(),
      setter: (value) => inactiveColor = value,
      deleter: () => inactiveColor = null
    );
    attributes['icon-size'] = ElementAttributeProperty(
      getter: () => iconSize?.toString(),
      setter: (value) => iconSize = value,
      deleter: () => iconSize = null
    );
    attributes['height'] = ElementAttributeProperty(
      getter: () => height?.toString(),
      setter: (value) => height = value,
      deleter: () => height = null
    );
  }
  static StaticDefinedBindingPropertyMap flutterCupertinoTabBarProperties = {
    'currentIndex': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoTabBarBindings>(element).currentIndex,
      setter: (element, value) =>
      castToType<FlutterCupertinoTabBarBindings>(element).currentIndex = value,
    ),
    'backgroundColor': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoTabBarBindings>(element).backgroundColor,
      setter: (element, value) =>
      castToType<FlutterCupertinoTabBarBindings>(element).backgroundColor = value,
    ),
    'activeColor': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoTabBarBindings>(element).activeColor,
      setter: (element, value) =>
      castToType<FlutterCupertinoTabBarBindings>(element).activeColor = value,
    ),
    'inactiveColor': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoTabBarBindings>(element).inactiveColor,
      setter: (element, value) =>
      castToType<FlutterCupertinoTabBarBindings>(element).inactiveColor = value,
    ),
    'iconSize': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoTabBarBindings>(element).iconSize,
      setter: (element, value) =>
      castToType<FlutterCupertinoTabBarBindings>(element).iconSize = value,
    ),
    'height': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoTabBarBindings>(element).height,
      setter: (element, value) =>
      castToType<FlutterCupertinoTabBarBindings>(element).height = value,
    ),
  };
  @override
  List<StaticDefinedBindingPropertyMap> get properties => [
    ...super.properties,
    flutterCupertinoTabBarProperties,
  ];
}