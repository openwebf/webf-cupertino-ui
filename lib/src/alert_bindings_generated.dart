// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by webf codegen --flutter-package-src=./webf_cupertino_ui/ --framework=react <distPath>
// ignore_for_file: avoid_unused_constructor_parameters
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: implementation_imports
// ignore_for_file: library_private_types_in_public_api
// ignore_for_file: prefer_void_to_null
import 'package:webf/webf.dart';
abstract class FlutterCupertinoAlertBindings extends WidgetElement {
  FlutterCupertinoAlertBindings(super.context);
  String? get title;
  set title(value);
  String? get message;
  set message(value);
  String? get cancelText;
  set cancelText(value);
  String? get cancelDestructive;
  set cancelDestructive(value);
  String? get cancelDefault;
  set cancelDefault(value);
  String? get cancelTextStyle;
  set cancelTextStyle(value);
  String? get confirmText;
  set confirmText(value);
  String? get confirmDefault;
  set confirmDefault(value);
  String? get confirmDestructive;
  set confirmDestructive(value);
  String? get confirmTextStyle;
  set confirmTextStyle(value);
  @override
  void initializeAttributes(Map<String, ElementAttributeProperty> attributes) {
    super.initializeAttributes(attributes);
    attributes['title'] = ElementAttributeProperty(
      getter: () => title?.toString(),
      setter: (value) => title = value,
      deleter: () => title = null
    );
    attributes['message'] = ElementAttributeProperty(
      getter: () => message?.toString(),
      setter: (value) => message = value,
      deleter: () => message = null
    );
    attributes['cancel-text'] = ElementAttributeProperty(
      getter: () => cancelText?.toString(),
      setter: (value) => cancelText = value,
      deleter: () => cancelText = null
    );
    attributes['cancel-destructive'] = ElementAttributeProperty(
      getter: () => cancelDestructive?.toString(),
      setter: (value) => cancelDestructive = value,
      deleter: () => cancelDestructive = null
    );
    attributes['cancel-default'] = ElementAttributeProperty(
      getter: () => cancelDefault?.toString(),
      setter: (value) => cancelDefault = value,
      deleter: () => cancelDefault = null
    );
    attributes['cancel-text-style'] = ElementAttributeProperty(
      getter: () => cancelTextStyle?.toString(),
      setter: (value) => cancelTextStyle = value,
      deleter: () => cancelTextStyle = null
    );
    attributes['confirm-text'] = ElementAttributeProperty(
      getter: () => confirmText?.toString(),
      setter: (value) => confirmText = value,
      deleter: () => confirmText = null
    );
    attributes['confirm-default'] = ElementAttributeProperty(
      getter: () => confirmDefault?.toString(),
      setter: (value) => confirmDefault = value,
      deleter: () => confirmDefault = null
    );
    attributes['confirm-destructive'] = ElementAttributeProperty(
      getter: () => confirmDestructive?.toString(),
      setter: (value) => confirmDestructive = value,
      deleter: () => confirmDestructive = null
    );
    attributes['confirm-text-style'] = ElementAttributeProperty(
      getter: () => confirmTextStyle?.toString(),
      setter: (value) => confirmTextStyle = value,
      deleter: () => confirmTextStyle = null
    );
  }
  static StaticDefinedBindingPropertyMap flutterCupertinoAlertProperties = {
    'title': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoAlertBindings>(element).title,
      setter: (element, value) =>
      castToType<FlutterCupertinoAlertBindings>(element).title = value,
    ),
    'message': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoAlertBindings>(element).message,
      setter: (element, value) =>
      castToType<FlutterCupertinoAlertBindings>(element).message = value,
    ),
    'cancelText': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoAlertBindings>(element).cancelText,
      setter: (element, value) =>
      castToType<FlutterCupertinoAlertBindings>(element).cancelText = value,
    ),
    'cancelDestructive': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoAlertBindings>(element).cancelDestructive,
      setter: (element, value) =>
      castToType<FlutterCupertinoAlertBindings>(element).cancelDestructive = value,
    ),
    'cancelDefault': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoAlertBindings>(element).cancelDefault,
      setter: (element, value) =>
      castToType<FlutterCupertinoAlertBindings>(element).cancelDefault = value,
    ),
    'cancelTextStyle': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoAlertBindings>(element).cancelTextStyle,
      setter: (element, value) =>
      castToType<FlutterCupertinoAlertBindings>(element).cancelTextStyle = value,
    ),
    'confirmText': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoAlertBindings>(element).confirmText,
      setter: (element, value) =>
      castToType<FlutterCupertinoAlertBindings>(element).confirmText = value,
    ),
    'confirmDefault': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoAlertBindings>(element).confirmDefault,
      setter: (element, value) =>
      castToType<FlutterCupertinoAlertBindings>(element).confirmDefault = value,
    ),
    'confirmDestructive': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoAlertBindings>(element).confirmDestructive,
      setter: (element, value) =>
      castToType<FlutterCupertinoAlertBindings>(element).confirmDestructive = value,
    ),
    'confirmTextStyle': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterCupertinoAlertBindings>(element).confirmTextStyle,
      setter: (element, value) =>
      castToType<FlutterCupertinoAlertBindings>(element).confirmTextStyle = value,
    ),
  };
  @override
  List<StaticDefinedBindingPropertyMap> get properties => [
    ...super.properties,
    flutterCupertinoAlertProperties,
  ];
}