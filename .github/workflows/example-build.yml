name: Build Example Apps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Configure Cloudsmith for WebF Enterprise
        run: |
          dart pub token add https://dart.cloudsmith.io/openwebf/webf-enterprise/ --env-var=CLOUDSMITH_API_KEY
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
      
      - name: Install dependencies (package)
        run: flutter pub get
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
      
      - name: Install dependencies (example)
        working-directory: example
        run: flutter pub get
      
      - name: Build Android APK
        working-directory: example
        run: flutter build apk --release
      
      - name: Build Android App Bundle
        working-directory: example
        run: flutter build appbundle --release
      
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: example/build/app/outputs/flutter-apk/app-release.apk
      
      - name: Upload App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: example/build/app/outputs/bundle/release/app-release.aab

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Configure Cloudsmith
        run: |
          dart pub token add https://dart.cloudsmith.io/openwebf/webf-enterprise/
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
      
      - name: Install dependencies
        working-directory: example
        run: flutter pub get
      
      - name: Build iOS (no signing)
        working-directory: example
        run: flutter build ios --release --no-codesign
      
      - name: Create IPA
        working-directory: example
        run: |
          cd build/ios/iphoneos
          mkdir Payload
          cp -r Runner.app Payload
          zip -r app-release.ipa Payload
      
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: example/build/ios/iphoneos/app-release.ipa

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Configure Cloudsmith
        run: |
          dart pub token add https://dart.cloudsmith.io/openwebf/webf-enterprise/
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
      
      - name: Install dependencies
        working-directory: example
        run: flutter pub get
      
      - name: Build macOS
        working-directory: example
        run: flutter build macos --release
      
      - name: Create DMG
        working-directory: example
        run: |
          brew install create-dmg
          create-dmg \
            --volname "WebF Cupertino UI Example" \
            --volicon "macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "webf_cupertino_ui_example.app" 200 190 \
            --hide-extension "webf_cupertino_ui_example.app" \
            --app-drop-link 600 185 \
            "webf_cupertino_ui_example.dmg" \
            "build/macos/Build/Products/Release/webf_cupertino_ui_example.app"
      
      - name: Upload macOS App
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: example/webf_cupertino_ui_example.dmg

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Configure Cloudsmith
        run: |
          dart pub token add https://dart.cloudsmith.io/openwebf/webf-enterprise/
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
      
      - name: Install dependencies
        working-directory: example
        run: flutter pub get
      
      - name: Build Windows
        working-directory: example
        run: flutter build windows --release
      
      - name: Create Windows ZIP
        working-directory: example
        run: |
          Compress-Archive -Path build\windows\x64\runner\Release\* -DestinationPath webf_cupertino_ui_example_windows.zip
      
      - name: Upload Windows App
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: example/webf_cupertino_ui_example_windows.zip

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Install Linux dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      
      - name: Configure Cloudsmith
        run: |
          dart pub token add https://dart.cloudsmith.io/openwebf/webf-enterprise/
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
      
      - name: Install dependencies
        working-directory: example
        run: flutter pub get
      
      - name: Build Linux
        working-directory: example
        run: flutter build linux --release
      
      - name: Create Linux TAR
        working-directory: example
        run: |
          cd build/linux/x64/release
          tar -czf ../../../../webf_cupertino_ui_example_linux.tar.gz bundle
      
      - name: Upload Linux App
        uses: actions/upload-artifact@v4
        with:
          name: linux-app
          path: example/webf_cupertino_ui_example_linux.tar.gz

  create-release:
    name: Create Release
    needs: [build-android, build-ios, build-macos, build-windows, build-linux]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Display structure of downloaded files
        run: ls -R artifacts
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: example-build-${{ github.run_number }}
          name: Example Build ${{ github.run_number }}
          draft: false
          prerelease: true
          files: |
            artifacts/android-apk/*.apk
            artifacts/android-aab/*.aab
            artifacts/ios-ipa/*.ipa
            artifacts/macos-app/*.dmg
            artifacts/windows-app/*.zip
            artifacts/linux-app/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
